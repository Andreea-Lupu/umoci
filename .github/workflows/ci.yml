# umoci: Umoci Modifies Open Containers' Images
# Copyright (C) 2016-2020 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]
  schedule:
    - cron: '0 0 * * *'

env:
  CODECOV_TOKEN: "562db4d7-963a-46f4-ac46-6db723595328"

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1'
      - name: install dependencies
        run: |
          # TODO: Move this to 'make fetch-deps'.
          GO111MODULE=off go get -u github.com/cpuguy83/go-md2man
          GO111MODULE=off go get -u golang.org/x/lint/golint
          GO111MODULE=off go get -u github.com/securego/gosec/cmd/gosec
          GO111MODULE=off go get -u github.com/client9/misspell/cmd/misspell
      - run: |
          make local-validate

  # TODO: Run the integration tests and rest of the CI, so we don't need to
  #       special-case MacOS here.
  macos:
    runs-on: macos-latest
    env:
      COVERAGE: umoci.coverage
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1'
      - name: install dependencies
        run: |
          brew unlink parallel # clashes with moreutils
          brew install coreutils moreutils
      - run: make local-validate-build
      - run: make local-test-unit
      - name: codecov
        run: hack/ci-codecov.sh codecov -F unit,macos -f $COVERAGE
      - name: upload coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage-${{ runner.os }}-${{ github.job }}-${{ strategy.job-index }}
          path: ${{ env.COVERAGE }}

  linux-ci-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: fetch cached ci image
        id: fetch-ci-image
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.cache/ci-image.tar.zst
          key: ${{ github.workflow }}-image-${{ runner.os }}-${{ hashFiles('Dockerfile') }}-${{ github.sha }}-${{ github.run_id }}
          restore-keys: |
            ${{ github.workflow }}-image-${{ runner.os }}-${{ hashFiles('Dockerfile') }}-${{ github.sha }}-
            ${{ github.workflow }}-image-${{ runner.os }}-${{ hashFiles('Dockerfile') }}-
            ${{ github.workflow }}-image-${{ runner.os }}-
            ${{ github.workflow }}-image-
      - name: build updated ci image
        run: make ci-cache
      - name: upload ci image
        uses: actions/upload-artifact@v2
        with:
          name: ci-image.tar.zst
          path: ${{ github.workspace }}/.cache/ci-image.tar.zst

  unit:
    runs-on: ubuntu-latest
    needs:
      - linux-ci-image
    env:
      COVERAGE: umoci.coverage
    steps:
      - uses: actions/checkout@v2
      - name: download ci image
        uses: actions/download-artifact@v2
        with:
          name: ci-image.tar.zst
          path: ${{ github.workspace }}/.cache/
      - run: make test-unit
      - name: codecov
        run: hack/ci-codecov.sh codecov -F unit,linux -f $COVERAGE
      - name: upload coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage-${{ runner.os }}-${{ github.job }}-${{ strategy.job-index }}
          path: ${{ env.COVERAGE }}

  integration:
    runs-on: ubuntu-latest
    needs:
      - linux-ci-image
    strategy:
      matrix:
        image:
          - opensuse/leap:latest
          - centos:latest
          - debian:latest
          - ubuntu:latest
          - fedora:latest
    env:
      DOCKER_IMAGE: ${{ matrix.image }}
      COVERAGE: umoci.coverage
    steps:
      - uses: actions/checkout@v2
      - name: download ci image
        uses: actions/download-artifact@v2
        with:
          name: ci-image.tar.zst
          path: ${{ github.workspace }}/.cache/
      - run: make DOCKER_IMAGE=$DOCKER_IMAGE test-integration
      - name: codecov
        run: hack/ci-codecov.sh codecov -F integration,linux -f $COVERAGE
      - name: upload coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage-${{ runner.os }}-${{ github.job }}-${{ strategy.job-index }}
          path: ${{ env.COVERAGE }}

  coverage:
    runs-on: ubuntu-latest
    needs:
      - macos
      - unit
      - integration
    env:
      COVERAGE: umoci.coverage
    steps:
      - uses: actions/checkout@v2
      - name: download all coverage
        uses: actions/download-artifact@v2
        with:
          path: coverage
      - name: compute coverage
        run: |
          find coverage/ -type f -name "*coverage*" -print0 | xargs -0 ./hack/collate.awk > "$COVERAGE"
          ./hack/ci-coverage.sh "$COVERAGE"
      - name: upload final coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: ${{ env.COVERAGE }}
